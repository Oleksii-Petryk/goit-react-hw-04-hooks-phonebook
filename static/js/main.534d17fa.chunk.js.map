{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Title/Title.module.css","components/Title/Title.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Title","title","className","styles","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","value","currentTarget","reset","form","preventDefault","label","input","type","pattern","required","onChange","autoComplete","button","Filter","ContactList","contacts","deleteContact","list","map","id","contactItem","text","onClick","App","setContacts","filter","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","length","setItem","stringify","contact","uuidv4","find","toLowerCase","alert","prevContacts","toLocaleLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.534d17fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1mpuq\",\"label\":\"ContactForm_label__7uJJg\",\"input\":\"ContactForm_input__1DMhW\",\"button\":\"ContactForm_button__3vyf5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2_EJ_\",\"contactItem\":\"ContactList_contactItem__1V4bs\",\"text\":\"ContactList_text__3sgY_\",\"number\":\"ContactList_number__373O8\",\"button\":\"ContactList_button__-Ozzy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2jjM3\",\"input\":\"Filter_input__34if6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2VOQs\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Title.module.css\";\n\nfunction Title({ title }) {\n  return <h1 className={styles.title}>{title}</h1>;\n}\n\nexport default Title;\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { value } = e.currentTarget;\n\n    switch (e.currentTarget.name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <button type=\"submit\" className={styles.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={value}\n        onChange={onChange}\n        autoComplete=\"off\"\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li className={styles.contactItem} key={id}>\n            <p className={styles.text}>{name}</p>\n            <p className={styles.number}>{number}</p>\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Title from \"./components/Title\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  const changeFilter = (e) => {\n    return setFilter(e.currentTarget.value);\n  };\n\n  const formSubmitHandler = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(name + \" is already in contacts\");\n      return;\n    }\n\n    setContacts((prevContacts) => [...prevContacts, contact]);\n  };\n\n  const getFilteredContactList = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n    );\n  };\n\n  const deleteContact = (id) => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (contacts.length !== 0) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }, [contacts]);\n\n  return (\n    <div className=\"App\">\n      <Title title=\"Phonebook\" />\n\n      <ContactForm onSubmit={formSubmitHandler} />\n\n      <Title title=\"Contacts\" />\n\n      <Filter value={filter} onChange={changeFilter} />\n\n      <ContactList\n        contacts={getFilteredContactList()}\n        deleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}